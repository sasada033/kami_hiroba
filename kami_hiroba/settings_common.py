"""
Django settings for kami_hiroba project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
from django.contrib.messages import constants as messages


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# django-environ reads .env file

env = environ.Env()
env.read_env(os.path.join(BASE_DIR, '.env'))


# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = env('SECRET_KEY')


ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',

    'khpost.apps.KhpostConfig',
    'accounts.apps.AccountsConfig',
    'contact.apps.ContactConfig',
    'editor.apps.EditorConfig',
    'storage.apps.StorageConfig',

    'debug_toolbar',
    'allauth',
    'allauth.account',
    'sass_processor',
    'ckeditor',
    'ckeditor_uploader',
]


MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'kami_hiroba.urls'


ADMIN_SITE_URL = env('ADMIN_SITE_URL')


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'kami_hiroba.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': env.db(),
}


# Email settings

DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')

ADMIN_EMAIL_ADDRESS = env('ADMIN_EMAIL_ADDRESS')


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# 必要な時（manage.py collectstatic コマンド使用時等）のみアクティブ
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)


# テンプレートに表示するメッセージ用セレクタ

MESSAGE_TAGS = {
    messages.ERROR: 'alert alert-danger',
    messages.WARNING: 'alert alert-warning',
    messages.SUCCESS: 'alert alert-success',
    messages.INFO: 'alert alert-info',
}


# 使用するユーザーモデル

AUTH_USER_MODEL = 'accounts.User'


# django-allauth設定

# django-allauthで利用するdjango.contrib.sitesを使うためにサイト識別用IDを設定
SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'allauth.account.auth_backends.AuthenticationBackend',
    # 一般ユーザー用（メールアドレス認証）
    'django.contrib.auth.backends.ModelBackend',
    # 管理サイト用（ユーザー名認証）
)

# 「メールアドレス&パスワードでログイン」 に変更する設定
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True

# usernameをログイン時に使用しない
ACCOUNT_USERNAME_REQUIRED = False

# サインアップにメールアドレス確認をはさむように設定
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

# サインアップ時に追加項目を保存する設定
ACCOUNT_FORMS = {
    'signup': 'accounts.forms.MyCustomSignupForm',
}

# ログイン/ログアウト後の遷移先を設定
LOGIN_REDIRECT_URL = 'khpost:index'
ACCOUNT_LOGOUT_REDIRECT_URL = 'khpost:index'

# ログアウトリンクのクリック一発でログアウトする設定
ACCOUNT_LOGOUT_ON_GET = True

# メールアドレス確認後のリダイレクト先
# プロフィールの初期設定
# ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = ''


# メディア設定

MEDIA_URL = '/media/'


# バックアップ設定

BACKUP_PATH = 'backup/'
NUM_SAVED_BACKUP = 30


# Sass設定

SASS_PROCESSOR_ROOT = os.path.join(BASE_DIR, 'static')
SASS_PROCESSOR_INCLUDE_FILE_PATTERN = r'^.+\.scss$'
SASS_PRECISION = 8
SASS_OUTPUT_STYLE = 'compressed'
SASS_TEMPLATE_EXTS = ['.html', '.haml']


# ckeditor設定

CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': '500px',
        'width': '100%',
        'ckeditor': 'img {max-width: 100%; height: auto;}',
    }
}


# Google Analytics settings

GOOGLE_ANALYTICS_TRACKING_ID = env('GOOGLE_ANALYTICS_TRACKING_ID')

VIEW_ID = env('VIEW_ID')
